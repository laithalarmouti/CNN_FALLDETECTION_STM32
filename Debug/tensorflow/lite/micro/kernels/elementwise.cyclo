C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/bits/std_abs.h:75:3:constexpr float std::abs(float)	1
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/cmath:177:3:constexpr float std::cos(float)	1
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/cmath:322:3:constexpr float std::log(float)	1
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/cmath:400:3:constexpr float std::sin(float)	1
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/cmath:438:3:constexpr float std::sqrt(float)	1
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/limits:1204:7:static constexpr long int std::numeric_limits<long int>::min()	1
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/limits:1207:7:static constexpr long int std::numeric_limits<long int>::max()	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:340:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	6
D:/MPU6050/FallDetectioncpp/tensorflow/lite/kernels/internal/common.h:916:13:void tflite::GetInvSqrtQuantizedMultiplierExp(int32_t, int, int32_t*, int*)	6
D:/MPU6050/FallDetectioncpp/tensorflow/lite/kernels/kernel_util.h:158:12:int tflite::NumInputs(const TfLiteNode*)	2
D:/MPU6050/FallDetectioncpp/tensorflow/lite/kernels/kernel_util.h:161:12:int tflite::NumOutputs(const TfLiteNode*)	2
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\arm-none-eabi\include\c++\13.3.1\arm-none-eabi\thumb\v7e-m+fp\hard\bits\gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/micro_context.h:174:22:tflite::MicroContext* tflite::GetMicroContext(const TfLiteContext*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:46:6:bool tflite::{anonymous}::IsNumericSupportedType(TfLiteType)	1
../tensorflow/lite/micro/kernels/elementwise.cc:50:6:bool tflite::{anonymous}::IsLogicalSupportedType(TfLiteType)	1
../tensorflow/lite/micro/kernels/elementwise.cc:54:6:bool tflite::{anonymous}::IsAbsSupportedType(TfLiteType)	4
../tensorflow/lite/micro/kernels/elementwise.cc:58:6:bool tflite::{anonymous}::IsRsqrtSupportedType(TfLiteType)	3
../tensorflow/lite/micro/kernels/elementwise.cc:62:13:void tflite::{anonymous}::SetAbsOutputMultiplier(float, float, int32_t*, int*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:69:13:void tflite::{anonymous}::SetRsqrtOutputMultiplier(float, float, int32_t*, int*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:214:21:TfLiteStatus tflite::{anonymous}::EvalNumeric(TfLiteContext*, TfLiteNode*, float (*)(float))	1
../tensorflow/lite/micro/kernels/elementwise.cc:220:21:TfLiteStatus tflite::{anonymous}::EvalLogical(TfLiteContext*, TfLiteNode*, bool (*)(bool))	1
../tensorflow/lite/micro/kernels/elementwise.cc:227:7:void* tflite::{anonymous}::ElementWiseAbsRsqrtInit(TfLiteContext*, const char*, size_t)	1
../tensorflow/lite/micro/kernels/elementwise.cc:292:14:TfLiteStatus tflite::{anonymous}::AbsEval(TfLiteContext*, TfLiteNode*)	6
../tensorflow/lite/micro/kernels/elementwise.cc:326:14:TfLiteStatus tflite::{anonymous}::SinEval(TfLiteContext*, TfLiteNode*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:330:14:TfLiteStatus tflite::{anonymous}::CosEval(TfLiteContext*, TfLiteNode*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:334:14:TfLiteStatus tflite::{anonymous}::LogEval(TfLiteContext*, TfLiteNode*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:338:14:TfLiteStatus tflite::{anonymous}::SqrtEval(TfLiteContext*, TfLiteNode*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:348:26:tflite::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>	1
../tensorflow/lite/micro/kernels/elementwise.cc:348:26:static float tflite::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::_FUN(float)	1
../tensorflow/lite/micro/kernels/elementwise.cc:348:26:tflite::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::operator float (*)(float)() const	1
../tensorflow/lite/micro/kernels/elementwise.cc:342:14:TfLiteStatus tflite::{anonymous}::RsqrtEval(TfLiteContext*, TfLiteNode*)	5
../tensorflow/lite/micro/kernels/elementwise.cc:365:37:tflite::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>	1
../tensorflow/lite/micro/kernels/elementwise.cc:365:37:static float tflite::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::_FUN(float)	1
../tensorflow/lite/micro/kernels/elementwise.cc:365:37:tflite::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)::<lambda(float)>::operator float (*)(float)() const	1
../tensorflow/lite/micro/kernels/elementwise.cc:364:14:TfLiteStatus tflite::{anonymous}::SquareEval(TfLiteContext*, TfLiteNode*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:369:37:tflite::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)::<lambda(bool)>	1
../tensorflow/lite/micro/kernels/elementwise.cc:369:37:static bool tflite::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)::<lambda(bool)>::_FUN(bool)	1
../tensorflow/lite/micro/kernels/elementwise.cc:369:37:tflite::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)::<lambda(bool)>::operator bool (*)(bool)() const	1
../tensorflow/lite/micro/kernels/elementwise.cc:368:14:TfLiteStatus tflite::{anonymous}::LogicalNotEval(TfLiteContext*, TfLiteNode*)	1
../tensorflow/lite/micro/kernels/elementwise.cc:374:18:TFLMRegistration tflite::Register_ABS()	1
../tensorflow/lite/micro/kernels/elementwise.cc:380:18:TFLMRegistration tflite::Register_SIN()	1
../tensorflow/lite/micro/kernels/elementwise.cc:385:18:TFLMRegistration tflite::Register_COS()	1
../tensorflow/lite/micro/kernels/elementwise.cc:390:18:TFLMRegistration tflite::Register_LOG()	1
../tensorflow/lite/micro/kernels/elementwise.cc:395:18:TFLMRegistration tflite::Register_SQRT()	1
../tensorflow/lite/micro/kernels/elementwise.cc:400:18:TFLMRegistration tflite::Register_RSQRT()	1
../tensorflow/lite/micro/kernels/elementwise.cc:406:18:TFLMRegistration tflite::Register_SQUARE()	1
../tensorflow/lite/micro/kernels/elementwise.cc:411:18:TFLMRegistration tflite::Register_LOGICAL_NOT()	1
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/bits/stl_algobase.h:257:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long int]	2
C:\ST\STM32CubeIDE_1.16.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.13.3.rel1.win32_1.0.0.202411081344\tools\bin/../lib/gcc/arm-none-eabi/13.3.1/../../../../arm-none-eabi/include/c++/13.3.1/bits/stl_algobase.h:233:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long int]	2
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:368:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, ExponentType) [with IntegerType = long int; ExponentType = int]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/kernels/internal/common.h:368:5:int tflite::CountLeadingZeros(T) [with T = long unsigned int]	2
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:536:12:gemmlowp::FixedPoint<tRawType, tIntegerBits>::RawType& gemmlowp::FixedPoint<tRawType, tIntegerBits>::raw() [with tRawType = long int; int tIntegerBits = 0]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:492:21:static gemmlowp::FixedPoint<tRawType, tIntegerBits> gemmlowp::FixedPoint<tRawType, tIntegerBits>::FromRaw(RawType) [with tRawType = long int; int tIntegerBits = 3]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:570:36:gemmlowp::FixedPoint<tRawType, tIntegerBits> gemmlowp::SaturatingRoundingMultiplyByPOT(FixedPoint<tRawType, tIntegerBits>) [with int tExponent = -1; tRawType = long int; int tIntegerBits = 3]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:698:47:typename FixedPointType::ScalarRawType gemmlowp::RescaleConstantInitializer(int32_t) [with FixedPointType = FixedPoint<long int, 3>]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:498:21:static gemmlowp::FixedPoint<tRawType, tIntegerBits> gemmlowp::FixedPoint<tRawType, tIntegerBits>::FromScalarRaw(ScalarRawType) [with tRawType = long int; int tIntegerBits = 3]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:519:21:static gemmlowp::FixedPoint<tRawType, tIntegerBits> gemmlowp::FixedPoint<tRawType, tIntegerBits>::One() [with tRawType = long int; int tIntegerBits = 3]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:550:55:gemmlowp::FixedPoint<tRawType, (tIntegerBits_a + tIntegerBits_b)> gemmlowp::operator*(FixedPoint<tRawType, tIntegerBits_a>, FixedPoint<tRawType, tIntegerBits_b>) [with tRawType = long int; int tIntegerBits_a = 3; int tIntegerBits_b = 3]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:550:55:gemmlowp::FixedPoint<tRawType, (tIntegerBits_a + tIntegerBits_b)> gemmlowp::operator*(FixedPoint<tRawType, tIntegerBits_a>, FixedPoint<tRawType, tIntegerBits_b>) [with tRawType = long int; int tIntegerBits_a = 6; int tIntegerBits_b = 3]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:679:39:gemmlowp::FixedPoint<tRawType, tIntegerBitsDst> gemmlowp::Rescale(FixedPoint<tRawType, tIntegerBits>) [with int tIntegerBitsDst = 3; tRawType = long int; int tIntegerBitsSrc = 9]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:597:1:gemmlowp::FixedPoint<tRawType, tIntegerBits_a> gemmlowp::operator-(FixedPoint<tRawType, tIntegerBits_a>, FixedPoint<tRawType, tIntegerBits_a>) [with tRawType = long int; int tIntegerBits = 6]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:679:39:gemmlowp::FixedPoint<tRawType, tIntegerBitsDst> gemmlowp::Rescale(FixedPoint<tRawType, tIntegerBits>) [with int tIntegerBitsDst = 3; tRawType = long int; int tIntegerBitsSrc = 6]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:698:47:typename FixedPointType::ScalarRawType gemmlowp::RescaleConstantInitializer(int32_t) [with FixedPointType = FixedPoint<long int, 0>]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:498:21:static gemmlowp::FixedPoint<tRawType, tIntegerBits> gemmlowp::FixedPoint<tRawType, tIntegerBits>::FromScalarRaw(ScalarRawType) [with tRawType = long int; int tIntegerBits = 0]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:550:55:gemmlowp::FixedPoint<tRawType, (tIntegerBits_a + tIntegerBits_b)> gemmlowp::operator*(FixedPoint<tRawType, tIntegerBits_a>, FixedPoint<tRawType, tIntegerBits_b>) [with tRawType = long int; int tIntegerBits_a = 3; int tIntegerBits_b = 0]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:536:12:gemmlowp::FixedPoint<tRawType, tIntegerBits>::RawType& gemmlowp::FixedPoint<tRawType, tIntegerBits>::raw() [with tRawType = long int; int tIntegerBits = 3]	1
../tensorflow/lite/micro/kernels/elementwise.cc:196:21:TfLiteStatus tflite::{anonymous}::EvalImpl(TfLiteContext*, TfLiteNode*, T (*)(T), TfLiteStatus (*)(T), TfLiteType) [with T = float]	5
../tensorflow/lite/micro/kernels/elementwise.cc:196:21:TfLiteStatus tflite::{anonymous}::EvalImpl(TfLiteContext*, TfLiteNode*, T (*)(T), TfLiteStatus (*)(T), TfLiteType) [with T = bool]	5
../tensorflow/lite/micro/kernels/elementwise.cc:234:10:T tflite::{anonymous}::AbsEvalQuantized(TfLiteContext*, TfLiteNode*, T) [with T = signed char]	2
../tensorflow/lite/micro/kernels/elementwise.cc:169:21:TfLiteStatus tflite::{anonymous}::EvalImplQuantized(TfLiteContext*, TfLiteNode*, T (*)(TfLiteContext*, TfLiteNode*, T), TfLiteStatus (*)(TfLiteContext*, TfLiteNode*, T), TfLiteType) [with T = signed char]	5
../tensorflow/lite/micro/kernels/elementwise.cc:191:10:T tflite::{anonymous}::AbsHelper(T) [with T = short int]	1
../tensorflow/lite/micro/kernels/elementwise.cc:196:21:TfLiteStatus tflite::{anonymous}::EvalImpl(TfLiteContext*, TfLiteNode*, T (*)(T), TfLiteStatus (*)(T), TfLiteType) [with T = short int]	5
../tensorflow/lite/micro/kernels/elementwise.cc:234:10:T tflite::{anonymous}::AbsEvalQuantized(TfLiteContext*, TfLiteNode*, T) [with T = short int]	2
../tensorflow/lite/micro/kernels/elementwise.cc:169:21:TfLiteStatus tflite::{anonymous}::EvalImplQuantized(TfLiteContext*, TfLiteNode*, T (*)(TfLiteContext*, TfLiteNode*, T), TfLiteStatus (*)(TfLiteContext*, TfLiteNode*, T), TfLiteType) [with T = short int]	5
../tensorflow/lite/micro/kernels/elementwise.cc:256:10:T tflite::{anonymous}::RsqrtEvalQuantized(TfLiteContext*, TfLiteNode*, T) [with T = signed char]	2
../tensorflow/lite/micro/kernels/elementwise.cc:283:14:TfLiteStatus tflite::{anonymous}::validate_input_func(TfLiteContext*, TfLiteNode*, T) [with T = signed char]	2
../tensorflow/lite/micro/kernels/elementwise.cc:256:10:T tflite::{anonymous}::RsqrtEvalQuantized(TfLiteContext*, TfLiteNode*, T) [with T = short int]	2
../tensorflow/lite/micro/kernels/elementwise.cc:283:14:TfLiteStatus tflite::{anonymous}::validate_input_func(TfLiteContext*, TfLiteNode*, T) [with T = short int]	2
../tensorflow/lite/micro/kernels/elementwise.cc:103:14:TfLiteStatus tflite::{anonymous}::PrepareAbsRsqrt(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = IsAbsSupportedType; int op_nameid = 0]	24
../tensorflow/lite/micro/kernels/elementwise.cc:79:14:TfLiteStatus tflite::{anonymous}::GenericPrepare(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = IsNumericSupportedType]	7
../tensorflow/lite/micro/kernels/elementwise.cc:103:14:TfLiteStatus tflite::{anonymous}::PrepareAbsRsqrt(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = IsRsqrtSupportedType; int op_nameid = 1]	23
../tensorflow/lite/micro/kernels/elementwise.cc:79:14:TfLiteStatus tflite::{anonymous}::GenericPrepare(TfLiteContext*, TfLiteNode*) [with bool (* <anonymous>)(TfLiteType) = IsLogicalSupportedType]	7
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:64:10:tRawType gemmlowp::Dup(typename FixedPointRawTypeTraits<tRawType>::ScalarRawType) [with tRawType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:70:14:tIntegerType gemmlowp::BitAnd(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:141:14:tIntegerType gemmlowp::ShiftRight(tIntegerType, int) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:200:14:tIntegerType gemmlowp::MaskIfLessThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:94:14:tIntegerType gemmlowp::Add(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:186:14:tIntegerType gemmlowp::MaskIfGreaterThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:427:13:IntegerType gemmlowp::SaturatingRoundingMultiplyByPOT(IntegerType) [with int Exponent = -1; IntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:536:12:gemmlowp::FixedPoint<tRawType, tIntegerBits>::RawType& gemmlowp::FixedPoint<tRawType, tIntegerBits>::raw() [with tRawType = long int; int tIntegerBits = 6]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:536:12:gemmlowp::FixedPoint<tRawType, tIntegerBits>::RawType& gemmlowp::FixedPoint<tRawType, tIntegerBits>::raw() [with tRawType = long int; int tIntegerBits = 9]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:427:13:IntegerType gemmlowp::SaturatingRoundingMultiplyByPOT(IntegerType) [with int Exponent = 6; IntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:106:14:tIntegerType gemmlowp::Sub(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:492:21:static gemmlowp::FixedPoint<tRawType, tIntegerBits> gemmlowp::FixedPoint<tRawType, tIntegerBits>::FromRaw(RawType) [with tRawType = long int; int tIntegerBits = 6]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:427:13:IntegerType gemmlowp::SaturatingRoundingMultiplyByPOT(IntegerType) [with int Exponent = 3; IntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:83:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = float]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:76:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = float]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:83:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = bool]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:76:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = bool]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:83:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = signed char]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:76:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = signed char]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:83:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = short int]	1
D:/MPU6050/FallDetectioncpp/tensorflow/lite/micro/kernels/kernel_util.h:76:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = short int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:157:14:tIntegerType gemmlowp::MaskIfNonZero(tIntegerType) [with tIntegerType = long int]	2
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:421:22:static IntegerType gemmlowp::ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, -1>::eval(IntegerType) [with int Exponent = -1; IntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:396:22:static IntegerType gemmlowp::ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, 1>::eval(IntegerType) [with int Exponent = 6; IntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:396:22:static IntegerType gemmlowp::ImplSaturatingRoundingMultiplyByPOT<Exponent, IntegerType, 1>::eval(IntegerType) [with int Exponent = 3; IntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:88:14:tIntegerType gemmlowp::BitNot(tIntegerType) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:126:14:tIntegerType gemmlowp::ShiftLeft(tIntegerType, OffsetType) [with tIntegerType = long int; OffsetType = int]	3
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:149:14:tIntegerType gemmlowp::SelectUsingMask(tIntegerType, tIntegerType, tIntegerType) [with tIntegerType = long int]	1
D:/MPU6050/FallDetectioncpp/third_party/gemmlowp/fixedpoint/fixedpoint.h:82:14:tIntegerType gemmlowp::BitXor(tIntegerType, tIntegerType) [with tIntegerType = long int]	1
